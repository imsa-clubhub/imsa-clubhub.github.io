<!DOCTYPE html>
<html>

<head>
        <title>SUDCast Command | Club Hub</title>
        <style type="text/css">
                html,
                body,
                #wrapper {
                        height: 100%;
                        width: 100%;
                        margin: 0;
                        padding: 0;
                        border: 0;
                }
                
                #wrapper td {
                        vertical-align: middle;
                        text-align: center;
                }
                
                input {
                        font-family: "Arial", Arial, sans-serif;
                        font-size: 40px;
                        font-weight: bold;
                }
                
                .border {
                        border: 2px solid #cccccc;
                        border-radius: 5px;
                }
                
                .border:focus {
                        outline: none;
                        border-color: #8ecaed;
                        box-shadow: 0 0 5px #8ecaed;
                }
        </style>
        <script type="text/javascript" src="//www.gstatic.com/cv/js/sender/v1/cast_sender.js"></script>
        <script src="//code.jquery.com/jquery-1.11.3.min.js"></script>
        <script type="text/javascript">
                console.log("Club Hub SUD for Digital Displays version 2.5.0.1");

                // Change these to your own application IDs and namespace if you'd like.
                var applicationID = 'D1F8A2B7';
                var namespace = 'urn:x-cast:in.undef.clubhub';
                
                var session = null;
                var counter = 0;
                var lastDate = new Date();

                /**
                 * Call initialization for Cast
                 */
                if (!chrome.cast || !chrome.cast.isAvailable) {
                        setTimeout(initializeCastApi, 1000);
                }
                /**
                 * initialization
                 */
                function initializeCastApi() {
                        var sessionRequest = new chrome.cast.SessionRequest(applicationID);
                        var apiConfig = new chrome.cast.ApiConfig(sessionRequest,
                                sessionListener,
                                receiverListener);
                        chrome.cast.initialize(apiConfig, onInitSuccess, onError);
                };
                /**
                 * initialization success callback
                 */
                function onInitSuccess() {
                        console.log("onInitSuccess");
                        start();
                }
                /**
                 * initialization error callback
                 */
                function onError(message) {
                        console.log("ERROR: " + JSON.stringify(message));
                }
                /**
                 * generic success callback
                 */
                function onSuccess(message) {
                        //console.log("SUCCESS! "+message);
                }
                /**
                 * callback on success for stopping app
                 */
                function onStopAppSuccess() {
                        console.log('App stopped successfully.');
                }

                /**
                 * session listener during initialization
                 */
                function sessionListener(e) {
                        console.log('New session ID:' + e.sessionId);
                        session = e;
                        session.addUpdateListener(sessionUpdateListener);
                        session.addMessageListener(namespace, receiverMessage);
                        $("#status").html("Connected to a display and casting.");
                }
                /**
                 * listener for session updates
                 */
                function sessionUpdateListener(isAlive) {
                        var message = isAlive ? 'Session Updated' : 'Session Removed';
                        message += ': ' + session.sessionId;
                        console.log(message);
                        if (!isAlive) {
                                session = null;
                        }
                };
                /**
                 * utility function to log messages from the receiver
                 * @param {string} namespace The namespace of the message
                 * @param {string} message A message string
                 */
                function receiverMessage(namespace, message) {
                        console.log(message);
                        /*if (message == "hi") {
                                $("#heartbeat").css({
                                        color: "lime"
                                });
                                var now = new Date();
                                $("#statistics").text("Last Interval: "+((now.getTime()-lastDate.getTime())/1000)+" seconds");
                                lastDate = now;
                                setTimeout(function() {
                                        $("#heartbeat").css({
                                                color: "red"
                                        })
                                }, 1000);
                        }*/
                };
                /**
                 * receiver listener during initialization
                 */
                function receiverListener(e) {
                        if (e === 'available') {
                                console.log("Receiver found.");
                        } else {
                                console.log("Receiver list empty.");
                        }
                }

                /**
                 * start/stop session
                 */

                function start() {
                        console.log("Starting Club Hub!");
                        if (session == null) {
                                console.log("Creating new session...");
                                chrome.cast.requestSession(function(e) {
                                        session = e;
                                        session.sendMessage(namespace, "hello", onSuccess.bind(this, "Sent hello."), onError);

                                }, onError);
                        }
                }

                function stopApp() {
                        //session.stop(onStopAppSuccess, onError);
                }

                setInterval(function() {
                        console.log("Sending hearbeat...");
                        if (session != null) {
                                session.sendMessage(namespace, "<3 " + counter, onSuccess.bind(this, "Sent heartbeat to Chromecast."), onError);
                                counter++;
                                if (counter > 100) counter = 0;
                        }
                }, 60000); //Heartbeat rate: 60 seconds
        </script>
</head>

<body>
        <table id="wrapper">
                <tr>
                        <td>
                                <h1>Welcome to the Club Hub SUDCast Command Page</h1>
                                <p id="status">Select a display for Casting.</p>
                                <h1 id="heartbeat" style="font-size: 5em;">&#9829;</h1>
                                <p id="statistics">Last Interval: None</p>
                        </td>
                </tr>
        </table>
</body>

</html>
